#!/usr/bin/python
# -*- coding:utf-8 -*-

import sys
import tmuxbk.controller as controller
import tmuxbk.config as config
import tmuxbk.util as util
import logging
import tmuxbk.log as log

"""
the start point of tmuxback. 
"""

help_info = """
    tmuxback (get my tmux back) is tool to backup and restore tmux sessions.
    Usage tmuxback [options]
    
    [OPTIONS] 
        -h print help message

        -v version

        -l [name] : list backup info
               with [name]: show detailed backup info by name
            without [name]: show brief and detailed info interactively

        -d [name] : delete a backup
               with [name]: delete by given name
            without [name]: delete interactively

        -b [name] : backup current tmux sessions
               with [name]: name the backup with given name
            without [name]: name the backup with default name(timestamp)

        -r [name] : restore tmux sessions from backup
               with [name]: restore sessions by backup name
            without [name]: restore from the latest backup

        -ri       : restore sessions interactively

    """


def usage():
    """print usage information"""
    print help_info

def version():
    """print version"""
    print config.VERSION

actions = {
    '-l'  : controller.show_and_action,
    '-b'  : controller.do_backup, 
    '-d'  : controller.do_delete,
    '-r'  : controller.do_restore,
    '-ri'  : controller.interactive_restore,
    '-h'  : usage,
    '-v'  : version
}


if __name__ == '__main__':

    #load config
    if not config.load_config():
        print
    
    log.setup_log(config.LOG_LVL_CONSOLE, config.LOG_LVL_FILE)

    #process user input options
    if sys.argv.__len__() <2 or not sys.argv[1]:
        usage()
        sys.exit(1)
    else: 
        func = actions.get(sys.argv[1])

        #backup or restore
        if sys.argv[1] in ('-b','-r','-l', '-d') \
                and sys.argv.__len__() == 3 :
            func(sys.argv[2]) 
        else:
            func() if func else usage()
            sys.exit(0)

