#!/usr/bin/python
# -*- coding:utf-8 -*-

import sys
import tmuxbk.controller as controller
import tmuxbk.config as config
import tmuxbk.util as util
import logging
import tmuxbk.log as log

"""
the start point of tmuxback. 
"""

help_info = """
    tmuxback (get my tmux back) is tool to backup and restore tmux sessions.
    Usage tmuxback [options]
    
    [OPTIONS] 
        -h print help message

        -v version

        -l [name] 
               with [name]: list detailed backup info of given name
            without [name]: list session info interactively

        -d [name] 
               with [name]: delete backup with given name
            without [name]: delete backup interactively

        -b [name] 
               with [name]: backup current tmux sessions with given name. 
            without [name]: if name is empty, using default name.(timestamp)

        -r [name] 
               with [name]: restore sessions from named backup. 
            without [name]: restore from latest default backup name.

        -ri restore sessions interactively
    """


def usage():
    """print usage information"""
    print help_info

def version():
    """print version"""
    print config.VERSION

actions = {
    '-l'  : controller.show_and_action,
    '-b'  : controller.do_backup, 
    '-d'  : controller.do_delete,
    '-r'  : controller.do_restore,
    '-ri'  : controller.interactive_restore,
    '-h'  : usage,
    '-v'  : version
}

if __name__ == '__main__':
    #check if config file init is required
    #TODO

    #load config
    #TODO 
    
    #FIXME the log level should be read from config
    log.setup_log(logging.DEBUG, logging.DEBUG)
    #process user input options
    if sys.argv.__len__() <2 or not sys.argv[1]:
        usage()
        sys.exit(1)
    else: 
        func = actions.get(sys.argv[1])

        #backup or restore
        if sys.argv[1] in ('-b','-r','-l', '-d') \
                and sys.argv.__len__() == 3 :
            func(sys.argv[2]) 
        else:
            func() if func else usage()
            sys.exit(0)

